# RabbitMQ Config
quarkus.rabbitmqclient.hostname=localhost
quarkus.rabbitmqclient.port=5672

%prod.quarkus.rabbitmqclient.hostname=rabbit
%prod.quarkus.rabbitmqclient.port=5672

# # RabbitMQ connection properties for secure communication
# mp.messaging.incoming.meter-data.connector-config.host=localhost
# mp.messaging.incoming.meter-data.connector-config.port=5671  # Default port for RabbitMQ over TLS
# mp.messaging.incoming.meter-data.connector-config.username=layblar
# mp.messaging.incoming.meter-data.connector-config.password=password

# # Enable TLS for RabbitMQ
# mp.messaging.incoming.meter-data.connector-config.ssl.enabled=true
# mp.messaging.incoming.meter-data.connector-config.ssl.keystore.location=/TLS/keystore.p12
# mp.messaging.incoming.meter-data.connector-config.ssl.keystore.password=keystore-password
# mp.messaging.incoming.meter-data.connector-config.ssl.alias=mykey

# # Provide RabbitMQ with the public key for client certificate verification
# mp.messaging.incoming.meter-data.connector-config.ssl.truststore.location=/TLS/public-key.crt

# datasource configuration
# %dev.quarkus.datasource.db-kind = postgresql
# %dev.quarkus.datasource.username = smartmeter
# %dev.quarkus.datasource.password = smartmeter
# %dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/meterdata

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=update

#kafka configuration
%dev.kafka.bootstrap.servers=localhost:9093
mp.messaging.incoming.household.connector=smallrye-kafka
mp.messaging.incoming.household.topic=household.public.event
mp.messaging.incoming.household.auto.offset.reset=earliest
mp.messaging.incoming.household.group.id=smartmeter-service-consumer

mp.messaging.outgoing.rabbit.connector=smallrye-kafka
mp.messaging.outgoing.rabbit.topic=smart-meter-data
mp.messaging.incoming.smart-meter-reading.connector=smallrye-kafka
mp.messaging.incoming.smart-meter-reading.topic=smart-meter-data
mp.messaging.incoming.smart-meter-reading.auto.offset.reset=earliest

# jwt key locations
%dev.mp.jwt.verify.publickey.location=publicKey.pem
# jwt issuer
%dev.mp.jwt.verify.issuer=layblar

%dev.quarkus.http.port=8082

# enable tracing
quarkus.datasource.jdbc.telemetry=true