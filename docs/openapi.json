{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Layblar Platform API",
    "description" : "# Introduction\nThis is the API Documentation for the Layblar-Platform. \n",
    "contact" : {
      "name" : "Layblar Documentation",
      "url" : "https://layblar.github.io/docs"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0",
    "x-logo" : {
      "url" : "https://layblar.github.io/docs/img/layblarlogo.svg"
    }
  },
  "servers" : [ {
    "url" : "http://{tenant}/api/v1",
    "variables" : {
      "tenant" : {
        "default" : "localhost:8080"
      }
    }
  } ],
  "tags" : [ {
    "name" : "Authorization",
    "description" : "Authorizaton operations. Use these Endpoints to get a valid JWT for the Layblar Platform."
  }, {
    "name" : "Device-Library",
    "description" : "Operations about Device Library"
  }, {
    "name" : "Household",
    "description" : "Household Operations"
  }, {
    "name" : "Label",
    "description" : "Operations for labeling"
  }, {
    "name" : "Project",
    "description" : "Operations regarding Project management"
  }, {
    "name" : "Smart-Meter",
    "description" : "Operations about Smart-Meter data"
  } ],
  "paths" : {
    "/api/v1/auth/login" : {
      "post" : {
        "tags" : [ "Authorization" ],
        "summary" : "Login",
        "description" : "Login with given credentials",
        "operationId" : "loginUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginUserDTO"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "The logged in user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "username" : {
                      "type" : "string"
                    },
                    "password" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "none" : [ ]
        } ]
      }
    },
    "/api/v1/auth/register" : {
      "post" : {
        "tags" : [ "Authorization" ],
        "summary" : "Register a new UserAccount",
        "description" : "Creates a new user and assigns them to a new Household",
        "operationId" : "createUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegisterUserDTO"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "The registered user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "password" : {
                      "type" : "string"
                    },
                    "email" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "none" : [ ]
        } ]
      }
    },
    "/deviceLibrary" : {
      "get" : {
        "tags" : [ "Device-Library" ],
        "summary" : "List all devices",
        "description" : "Get the complete list of all devices from the device library",
        "operationId" : "listDevices",
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "404" : {
            "description" : "No devices found"
          },
          "200" : {
            "description" : "List of all devices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceDTO"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "none" : [ ]
        } ]
      }
    },
    "/household/{householdId}" : {
      "get" : {
        "tags" : [ "Household" ],
        "summary" : "Get household information",
        "description" : "Get information about the given household",
        "operationId" : "getHouseholdInformation",
        "parameters" : [ {
          "name" : "householdId",
          "in" : "path",
          "description" : "The id of the household for which the data should be fetched",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "Household with the given id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "address" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    },
    "/household/{householdId}/device" : {
      "get" : {
        "tags" : [ "Household" ],
        "summary" : "List household devices",
        "description" : "List household devices",
        "operationId" : "listHouseholdDevices",
        "parameters" : [ {
          "name" : "householdId",
          "in" : "path",
          "description" : "The id of the household for which the data should be fetched",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "List of all devices in the household",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceDTO"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Household" ],
        "summary" : "Update device information",
        "description" : "Update device information",
        "operationId" : "updateDeviceInformation",
        "parameters" : [ {
          "name" : "householdId",
          "in" : "path",
          "description" : "The id of the household from which the device should be removed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceDTO"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "The updated device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "deviceId" : {
                      "type" : "string"
                    },
                    "deviceName" : {
                      "type" : "string"
                    },
                    "serialNumber" : {
                      "type" : "string"
                    },
                    "powerUsage" : {
                      "format" : "float",
                      "type" : "number"
                    },
                    "manufacturer" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    },
    "/household/{householdId}/device/{deviceId}" : {
      "post" : {
        "tags" : [ "Household" ],
        "summary" : "Add device to household",
        "description" : "Add device to household",
        "operationId" : "addDeviceToHousehold",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "description" : "The id of the device that should be added to the household",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "householdId",
          "in" : "path",
          "description" : "The id of the household to which the device should be added",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "The household with the added device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "address" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Household" ],
        "summary" : "Remove device from household",
        "description" : "Remove device from household",
        "operationId" : "removeDeviceFromHousehold",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "description" : "The id of the device that should be removed from the household",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "householdId",
          "in" : "path",
          "description" : "The id of the household from which the device should be removed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "The household without the removed device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "address" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    },
    "/household/{householdId}/merge" : {
      "post" : {
        "tags" : [ "Household" ],
        "summary" : "Merge household",
        "description" : "Join given household",
        "operationId" : "joinHousehold",
        "parameters" : [ {
          "name" : "householdId",
          "in" : "path",
          "description" : "The id of the household that should be merged",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "Your household",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "address" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    },
    "/household/{householdId}/smartMeterReader" : {
      "post" : {
        "tags" : [ "Household" ],
        "summary" : "Register smart meter reader",
        "description" : "Register smart meter reader in given household",
        "operationId" : "registerSmartMeterReader",
        "parameters" : [ {
          "name" : "householdId",
          "in" : "path",
          "description" : "The id of the household to which the smart meter reader should be added",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SmartMeterDataDTO"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "The household with the added smart meter reader",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "address" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Household" ],
        "summary" : "Remove smart meter reader",
        "description" : "Remove smart meter reader from given household",
        "operationId" : "removeSmartMeterReader",
        "parameters" : [ {
          "name" : "householdId",
          "in" : "path",
          "description" : "The id of the household from which the smart meter reader should be removed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SmartMeterDataDTO"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "The household without the removed smart meter reader",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "address" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    },
    "/household/{householdId}/split" : {
      "post" : {
        "tags" : [ "Household" ],
        "summary" : "Split household",
        "description" : "Leave given household",
        "operationId" : "leaveHousehold",
        "parameters" : [ {
          "name" : "householdId",
          "in" : "path",
          "description" : "The id of the household that should be split",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "Your household",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "address" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    },
    "/label" : {
      "post" : {
        "tags" : [ "Label" ],
        "summary" : "Create a Label",
        "description" : "Create a Label",
        "operationId" : "createLabel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateLabelDTO"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "400" : {
            "description" : "Missing Query Parameters"
          },
          "200" : {
            "description" : "The created label",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CreateLabelDTO"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    },
    "/label/{householdId}" : {
      "get" : {
        "tags" : [ "Label" ],
        "summary" : "Returns a list of labels",
        "description" : "Returns a list of labels for the specific household",
        "operationId" : "getLabelsByHousehold",
        "parameters" : [ {
          "name" : "householdId",
          "in" : "path",
          "description" : "The id of the household for which the data should be fetched",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "Label by Household",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "labelId" : {
                      "type" : "string"
                    },
                    "householdId" : {
                      "type" : "string"
                    },
                    "smartMeterData" : {
                      "$ref" : "#/components/schemas/SmartMeterDataDTO1"
                    },
                    "label" : {
                      "type" : "string"
                    },
                    "createdAt" : {
                      "$ref" : "#/components/schemas/LocalDateTime"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    },
    "/project/project" : {
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "List all Projects",
        "description" : "List all Projects",
        "operationId" : "listProjects",
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "List of all projects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProjectDTO"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Project" ],
        "summary" : "Create a Project",
        "description" : "Create a new Project",
        "operationId" : "createProject",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectDTO"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "The created project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "startDate" : {
                      "type" : "string"
                    },
                    "endDate" : {
                      "type" : "string"
                    },
                    "researcherId" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    },
    "/project/project/{projectId}" : {
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "Get a Project",
        "description" : "Get a Project",
        "operationId" : "getProject",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to get",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "Project by id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "startDate" : {
                      "type" : "string"
                    },
                    "endDate" : {
                      "type" : "string"
                    },
                    "researcherId" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Project" ],
        "summary" : "Update a Project",
        "description" : "Update a Project",
        "operationId" : "updateProject",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectDTO"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "The updated project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "startDate" : {
                      "type" : "string"
                    },
                    "endDate" : {
                      "type" : "string"
                    },
                    "researcherId" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    },
    "/project/project/{projectId}/join/{userId}" : {
      "post" : {
        "tags" : [ "Project" ],
        "summary" : "Join a Project",
        "description" : "Join a Project",
        "operationId" : "joinProject",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to join",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of the user that wants to join the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "The joined Project Information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProjectDTO"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    },
    "/project/researcher" : {
      "post" : {
        "tags" : [ "Project" ],
        "summary" : "Create a Researcher",
        "description" : "Create a new Researcher",
        "operationId" : "createResearcher",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResearcherDTO"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "200" : {
            "description" : "The created researcher",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "organization" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    },
    "/smartmeter/household/{householdId}" : {
      "get" : {
        "tags" : [ "Smart-Meter" ],
        "summary" : "Get Smart-Meter data",
        "description" : "Get a List of Smart-Meter data from the specified time frame",
        "operationId" : "getSmartMeterData",
        "parameters" : [ {
          "name" : "householdId",
          "in" : "path",
          "description" : "The id of the household for which the data should be fetched",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The begin of the time intervall for which the data should be fetched. Needs to be a Unix Timestamp as String",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the time intervall for which the data should be fetched. Needs to be a Unix Timestamp as String",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Invalid User"
          },
          "500" : {
            "description" : "Server Error"
          },
          "400" : {
            "description" : "Missing Query Parameters"
          },
          "422" : {
            "description" : "Wrong Date Format"
          },
          "200" : {
            "description" : "Smart-Meter data for the specified time period",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SmartMeterDataDTO"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "CreateLabelDTO" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "labelData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SmartMeterDataDTO1"
            }
          },
          "labelMetaData" : {
            "$ref" : "#/components/schemas/LabelMetaDataDTO"
          }
        }
      },
      "DeviceDTO" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string"
          },
          "deviceName" : {
            "type" : "string"
          },
          "serialNumber" : {
            "type" : "string"
          },
          "powerUsage" : {
            "format" : "float",
            "type" : "number"
          },
          "manufacturer" : {
            "type" : "string"
          }
        }
      },
      "LabelMetaDataDTO" : {
        "type" : "object",
        "properties" : {
          "householdMetaData" : {
            "type" : "string"
          },
          "deviceMetaData" : {
            "type" : "string"
          }
        }
      },
      "LocalDateTime" : {
        "format" : "date-time",
        "type" : "string",
        "example" : "2022-03-10T12:15:50"
      },
      "LoginUserDTO" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "ProjectDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string"
          },
          "endDate" : {
            "type" : "string"
          },
          "researcherId" : {
            "type" : "string"
          }
        }
      },
      "RegisterUserDTO" : {
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "ResearcherDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "organization" : {
            "type" : "string"
          }
        }
      },
      "SmartMeterDataDTO" : {
        "description" : "Smart Meter Data",
        "type" : "object",
        "properties" : {
          "time" : {
            "description" : "Time at which Smart-Meter data was recored",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/LocalDateTime"
            } ],
            "example" : "2023-05-06T11:15:40"
          },
          "sensorId" : {
            "description" : "Id of the Smart-Meter that recored the meassurement",
            "type" : "string",
            "example" : "123MF34FBDKAS"
          },
          "1.7.0" : {
            "format" : "float",
            "description" : "This is the current positive active power in watts measured from Phase A.",
            "type" : "number"
          },
          "1.8.0" : {
            "format" : "float",
            "description" : "This is the total positive active energy in watt-hours consumed or generated from Phase A.",
            "type" : "number"
          },
          "2.7.0" : {
            "format" : "float",
            "description" : "This is the current negative active power in watts measured from Phase A. This could indicate generated energy.",
            "type" : "number"
          },
          "2.8.0" : {
            "format" : "float",
            "description" : "This is the total negative active energy in watt-hours consumed or generated from Phase A.",
            "type" : "number"
          },
          "3.8.0" : {
            "format" : "float",
            "description" : "This is the total positive reactive energy in var-hours consumed or generated from Phase A.",
            "type" : "number"
          },
          "4.8.0" : {
            "format" : "float",
            "description" : "This is the total negative reactive energy in var-hours consumed or generated from Phase A",
            "type" : "number"
          },
          "16.7.0" : {
            "format" : "float",
            "description" : "This is the difference between positive and negative active instantaneous power in watts from Phase A.",
            "type" : "number"
          },
          "31.7.0" : {
            "format" : "float",
            "description" : "This is the current in amperes flowing in Phase L1.",
            "type" : "number"
          },
          "32.7.0" : {
            "format" : "float",
            "description" : "This is the instantaneous voltage in volts in Phase L1.",
            "type" : "number"
          },
          "51.7.0" : {
            "format" : "float",
            "description" : "This is the current in amperes flowing in Phase L2.",
            "type" : "number"
          },
          "52.7.0" : {
            "format" : "float",
            "description" : "This is the instantaneous voltage in volts in Phase L2.",
            "type" : "number"
          },
          "71.7.0" : {
            "format" : "float",
            "description" : "This is the current in amperes flowing in Phase L3.",
            "type" : "number"
          },
          "72.7.0" : {
            "format" : "float",
            "description" : "This is the instantaneous voltage in volts in Phase L3.",
            "type" : "number"
          }
        }
      },
      "SmartMeterDataDTO1" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "sensorId" : {
            "type" : "string"
          },
          "1.7.0" : {
            "format" : "float",
            "type" : "number"
          },
          "1.8.0" : {
            "format" : "float",
            "type" : "number"
          },
          "2.7.0" : {
            "format" : "float",
            "type" : "number"
          },
          "2.8.0" : {
            "format" : "float",
            "type" : "number"
          },
          "3.8.0" : {
            "format" : "float",
            "type" : "number"
          },
          "4.8.0" : {
            "format" : "float",
            "type" : "number"
          },
          "16.7.0" : {
            "format" : "float",
            "type" : "number"
          },
          "31.7.0" : {
            "format" : "float",
            "type" : "number"
          },
          "32.7.0" : {
            "format" : "float",
            "type" : "number"
          },
          "51.7.0" : {
            "format" : "float",
            "type" : "number"
          },
          "52.7.0" : {
            "format" : "float",
            "type" : "number"
          },
          "71.7.0" : {
            "format" : "float",
            "type" : "number"
          },
          "72.7.0" : {
            "format" : "float",
            "type" : "number"
          }
        }
      }
    },
    "securitySchemes" : {
      "SecurityScheme" : {
        "type" : "http",
        "description" : "Authentication",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      },
      "jwt" : {
        "type" : "http",
        "description" : "Authentication",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      },
      "none" : {
        "type" : "http",
        "description" : "No Authentication",
        "scheme" : "No-Auth"
      }
    }
  }
}